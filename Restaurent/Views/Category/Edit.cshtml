@model Restaurent.Models.Category

@{
    ViewData["Title"] = "Edit Category";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 mx-auto">
            <div class="card shadow-lg">
                <div class="card-header bg-warning text-dark text-center">
                    <h3><i class="fas fa-edit"></i> Edit Category</h3>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Edit" method="post" id="editForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Id" />

                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="form-group mb-3">
                            <label asp-for="Name" class="form-label fw-bold">Category Name *</label>
                            <input asp-for="Name" class="form-control form-control-lg"
                                   placeholder="Enter category name"
                                   id="nameInput"
                                   required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <small class="form-text text-muted">
                                Enter a unique category name (2-50 characters)
                            </small>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <small class="text-muted">
                                    <strong><i class="fas fa-calendar-plus"></i> Created:</strong><br>
                                    @Model.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")
                                </small>
                            </div>
                            <div class="col-md-6">
                                @if (Model.UpdateAt.HasValue)
                                {
                                    <small class="text-muted">
                                        <strong><i class="fas fa-edit"></i> Last Updated:</strong><br>
                                        @Model.UpdateAt.Value.ToString("MMM dd, yyyy hh:mm tt")
                                    </small>
                                }
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="submit" class="btn btn-warning btn-lg">
                                <i class="fas fa-save"></i> Update Category
                            </button>
                            <a asp-action="Index" class="btn btn-secondary btn-lg">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // التحقق من الاسم قبل الإرسال
            $('#editForm').on('submit', function(e) {
                const name = $('#nameInput').val().trim();

                if (!name) {
                    e.preventDefault();
                    alert('Please enter a category name');
                    return false;
                }

                if (name.length < 2) {
                    e.preventDefault();
                    alert('Category name must be at least 2 characters long');
                    return false;
                }

                return true;
            });

            // تحقق فوري من الاسم
            $('#nameInput').on('blur', function() {
                const name = $(this).val().trim();
                const nameError = $(this).next('.text-danger');

                if (!name) {
                    $(this).addClass('is-invalid');
                    nameError.text('Category name is required');
                } else if (name.length < 2) {
                    $(this).addClass('is-invalid');
                    nameError.text('Category name must be at least 2 characters long');
                } else if (name.length > 50) {
                    $(this).addClass('is-invalid');
                    nameError.text('Category name must not exceed 50 characters');
                } else {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                    nameError.text('');
                }
            });
        });
    </script>

    <style>
        .form-control.is-valid {
            border-color: #28a745;
        }

        .form-control.is-invalid {
            border-color: #dc3545;
        }

        .card {
            border-radius: 15px;
        }

        .btn-lg {
            padding: 0.75rem 1.5rem;
        }
    </style>
}