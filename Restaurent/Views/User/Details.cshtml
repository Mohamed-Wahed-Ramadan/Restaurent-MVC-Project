@model Models.User

@{
    ViewData["Title"] = "My Profile";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow-lg">
                <div class="card-header text-white text-center"
                     style="background: @(Model.IsAdmin ? "#00ff41" : "#ff9500");">
                    <h3>
                        <i class="fas fa-user-circle"></i>
                        @(Model.IsAdmin ? "Admin Profile" : "User Profile")
                    </h3>
                </div>
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        @if (!string.IsNullOrEmpty(Model.ImageURL))
                        {
                            <img src="@Model.ImageURL" alt="Profile Image"
                                 class="img-thumbnail rounded-circle mb-3"
                                 style="width: 150px; height: 150px; object-fit: cover;"
                                 onerror="this.src='/images/default-user.png'">
                        }
                        else
                        {
                            <div class="profile-avatar mx-auto mb-3"
                                 style="width: 150px; height: 150px; background: @(Model.IsAdmin ? "#00ff41" : "#ff9500");
                                                    border-radius: 50%; display: flex; align-items: center; justify-content: center;">
                                <i class="fas fa-user fa-4x text-white"></i>
                            </div>
                        }
                        <h4>@Model.UserName</h4>
                        @if (Model.IsAdmin)
                        {
                            <span class="badge" style="background-color: #00ff41; color: #000; font-size: 1rem;">
                                <i class="fas fa-crown"></i> Administrator
                            </span>
                        }
                        else
                        {
                            <span class="badge" style="background-color: #ff9500; color: #000; font-size: 1rem;">
                                <i class="fas fa-user"></i> Regular User
                            </span>
                        }
                    </div>

                    <hr />

                    <dl class="row">
                        <dt class="col-sm-4">
                            <i class="fas fa-envelope text-primary"></i> Email:
                        </dt>
                        <dd class="col-sm-8">@Model.Email</dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-phone text-success"></i> Phone:
                        </dt>
                        <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.PhoneNumber) ? "Not provided" : Model.PhoneNumber)</dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-birthday-cake text-danger"></i> Birthday:
                        </dt>
                        <dd class="col-sm-8">@Model.Birthday.ToString("dd MMMM yyyy")</dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-calendar-alt text-info"></i> Age:
                        </dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-primary fs-6">@Model.Age years old</span>
                        </dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-clock text-warning"></i> Member Since:
                        </dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToString("dd MMM yyyy")</dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-4">
                                <i class="fas fa-edit text-secondary"></i> Last Updated:
                            </dt>
                            <dd class="col-sm-8">@Model.UpdatedAt.Value.ToString("dd MMM yyyy, hh:mm tt")</dd>
                        }
                    </dl>

                    <hr />

                    <div class="d-grid gap-2">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-lg">
                            <i class="fas fa-edit"></i> Edit Profile
                        </a>

                        @{
                            var userSessionJson = Context.Session.GetString("CurrentUser");
                            var isSuperAdmin = false;
                            if (!string.IsNullOrEmpty(userSessionJson))
                            {
                                try
                                {
                                    var userSession = System.Text.Json.JsonSerializer.Deserialize<dynamic>(userSessionJson);
                                    isSuperAdmin = userSession.GetProperty("Email").GetString() == "medo03459@gmail.com" ||
                                    userSession.GetProperty("Email").GetString() == "4dm1n@gmail.com";
                                }
                                catch { }
                            }
                        }

                        @if (Model.IsAdmin || isSuperAdmin)
                        {
                            <a asp-action="ManageUsers" class="btn btn-info btn-lg">
                                <i class="fas fa-users-cog"></i> Manage Users
                            </a>
                        }

                        <form asp-action="Logout" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-lg w-100"
                                    onclick="return confirm('Are you sure you want to logout?')">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .profile-avatar {
            transition: transform 0.3s ease;
        }

            .profile-avatar:hover {
                transform: scale(1.05);
            }

        .img-thumbnail {
            transition: transform 0.3s ease;
        }

            .img-thumbnail:hover {
                transform: scale(1.05);
            }

        .btn {
            transition: all 0.3s ease;
        }

            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }

    </style>
}