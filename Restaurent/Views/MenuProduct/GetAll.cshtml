@using Microsoft.EntityFrameworkCore
@using Context
@model IEnumerable<Models.MenuProduct>
@inject AppDpContext _context

@{
    ViewData["Title"] = "Our Menu";

    // استخدام النظام الموحد للجلسة
    var userSessionJson = Context.Session.GetString("CurrentUser");
    var isLoggedIn = !string.IsNullOrEmpty(userSessionJson);
    var isAdmin = false;
    var userId = "";
    var favorites = new List<int>();

    if (isLoggedIn)
    {
        try
        {
            var userSession = System.Text.Json.JsonSerializer.Deserialize<System.Text.Json.Nodes.JsonObject>(userSessionJson);
            if (userSession != null)
            {
                isAdmin = userSession["IsAdmin"]?.GetValue<bool>() ?? false;
                userId = userSession["Id"]?.GetValue<string>() ?? "";

                // جلب المفضلات من قاعدة البيانات
                if (!string.IsNullOrEmpty(userId))
                {
                    favorites = await _context.Favorites
                        .Where(f => f.UserId == userId)
                        .Select(f => f.MenuProductId)
                        .ToListAsync();
                }
            }
        }
        catch
        {
            isLoggedIn = false;
        }
    }

    // جلب جميع الفئات النشطة من قاعدة البيانات
    var activeCategories = await _context.Categories
        .Where(c => !c.IsDeleted)
        .OrderBy(c => c.Name)
        .ToListAsync();
}

<div class="container-fluid px-3 px-md-5 " >
    <!-- Carousel Section -->
    <div id="carouselExample" class="carousel slide carousel-fade mb-4" data-bs-ride="carousel">
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="/images/res1.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 1" loading="lazy">
            </div>
            <div class="carousel-item">
                <img src="/images/res7.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 2" loading="lazy">
            </div>
            <div class="carousel-item">
                <img src="/images/res2.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 3" loading="lazy">
            </div>
            <div class="carousel-item">
                <img src="/images/res3.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 4" loading="lazy">
            </div>
            <div class="carousel-item">
                <img src="/images/res4.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 5" loading="lazy">
            </div>
            <div class="carousel-item">
                <img src="/images/res5.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 6" loading="lazy">
            </div>
            <div class="carousel-item">
                <img src="/images/res6.jpg" class="d-block w-100" style="height:500px; border-radius:50px;" alt="Restaurant Image 7" loading="lazy">
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>

    <!-- Active Discounts Banner -->
    <div class="row mb-4">
        <div class="col-12">
            @if (ViewBag.ActiveDiscounts != null && ((List<Models.Discount>)ViewBag.ActiveDiscounts).Any())
            {
                <!-- Discounts Carousel -->
                <div id="discountsCarousel" class="carousel slide shadow-sm rounded" data-bs-ride="carousel" style="background: linear-gradient(135deg, #2e7d32 0%, #4caf50 100%);">
                    <div class="carousel-inner py-2">
                        @{
                            var discounts = (List<Models.Discount>)ViewBag.ActiveDiscounts;
                            for (int i = 0; i < discounts.Count; i++)
                            {
                                var discount = discounts[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <div class="container">
                                        <div class="row align-items-center text-white px-3">
                                            <div class="col-md-2 text-center">
                                                <div class="discount-badge-large bg-white text-dark rounded p-2">
                                                    <h2 class="mb-0 fw-bold text-success">@discount.DiscountPercentage%</h2>
                                                    <small class="text-muted">OFF</small>
                                                </div>
                                            </div>
                                            <div class="col-md-8">
                                                <h5 class="mb-1 fw-bold">@discount.Name</h5>
                                                <p class="mb-1 small">@discount.Description</p>
                                                <div class="d-flex gap-2 flex-wrap">
                                                    @if (discount.CategoryId != null)
                                                    {
                                                        <span class="badge bg-light text-dark">
                                                            @discount.Category?.Name
                                                        </span>
                                                    }
                                                    @if (discount.IsAgeBased)
                                                    {
                                                        <span class="badge bg-warning text-dark">
                                                            Ages @discount.MinAge - @discount.MaxAge
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="col-md-2 text-center">
                                                <small class="mb-1 opacity-75 d-block">Valid Until</small>
                                                <strong>@discount.EndDate.ToString("MMM dd")</strong>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    @if (discounts.Count > 1)
                    {
                        <button class="carousel-control-prev" type="button" data-bs-target="#discountsCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#discountsCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-dismissible fade show border-0 shadow-sm mb-0"
                     style="background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);">
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert"></button>
                    <div class="row align-items-center text-white py-2">
                        <div class="col-md-2 text-center">
                            <i class="fas fa-gift fa-2x"></i>
                        </div>
                        <div class="col-md-8">
                            <h5 class="mb-1 fw-bold">Special Offers Coming Soon!</h5>
                            <p class="mb-0 small">Stay tuned for exclusive deals and amazing discounts</p>
                        </div>
                        <div class="col-md-2 text-center">
                            <span class="badge bg-light text-dark px-3 py-2">
                                <i class="fas fa-bell me-1"></i>Notify Me
                            </span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Enhanced Interactive Search Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body p-4">
                    <div class="row g-3 align-items-end">
                        <!-- Search Input -->
                        <div class="col-md-8">
                            <label for="interactiveSearch" class="form-label fw-bold text-dark mb-2">
                                <i class="fas fa-search me-2 text-primary"></i>Search Products
                            </label>
                            <div class="input-group input-group-lg">
                                <span class="input-group-text bg-light border-end-0">
                                    <i class="fas fa-search text-primary"></i>
                                </span>
                                <input type="text"
                                       class="form-control border-start-0"
                                       id="interactiveSearch"
                                       placeholder="Search by product name, description, or category..."
                                       autocomplete="off">
                                <button class="btn btn-outline-secondary" type="button" onclick="clearInteractiveSearch()">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>

                        <!-- Category Filter -->
                        <div class="col-md-4">
                            <label for="categoryFilter" class="form-label fw-bold text-dark mb-2">
                                <i class="fas fa-filter me-2 text-primary"></i>Filter by Category
                            </label>
                            <select class="form-select form-select-lg" id="categoryFilter">
                                <option value="">All Categories</option>
                                @foreach (var category in activeCategories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <!-- Search Status -->
                    <div class="row mt-3">
                        <div class="col-12">
                            <div id="searchStatus" class="d-none">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span id="resultsCount" class="badge bg-primary fs-6"></span>
                                    <button class="btn btn-sm btn-outline-secondary" onclick="resetInteractiveSearch()">
                                        <i class="fas fa-redo me-1"></i>Reset
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Loading Spinner -->
    <div id="searchLoading" class="text-center d-none my-4">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="text-muted mt-2">Searching products...</p>
    </div>

    <!-- Products Container -->
    <div id="productsContainer">
        @{
            // تجميع المنتجات حسب الفئة
            var productsByCategory = Model.GroupBy(p => p.Category?.Name ?? "Uncategorized")
            .OrderBy(g => g.Key);

            foreach (var categoryGroup in productsByCategory)
            {
                <div class="category-section mb-5" data-category="@categoryGroup.Key" data-category-id="@categoryGroup.First().CategoryId">
                    <!-- Category Header -->
                    <div class="category-header p-3 mb-3 border-bottom">
                        <div class="d-flex justify-content-between align-items-center">

                            <span class="badge bg-primary fs-6 category-count" style="direction:rtl;">
                                 @categoryGroup.Count() نوع
                            </span>
                            <h3 class="mb-0 fw-bold" style="color: #8B4513;">
                                
                                @categoryGroup.Key
                                <i class="fas fa-utensils me-2" style="color: #8B4513;"></i>
                            </h3>
                        </div>
                    </div>

                    <!-- Products Grid -->
                    <div class="row g-4 rounded-bottom">
                        @foreach (var item in categoryGroup)
                        {
                            <div class="col-12 col-sm-6 col-md-4 col-lg-3 product-item"
                                 data-category="@item.Category?.Name"
                                 data-category-id="@item.CategoryId"
                                 data-name="@item.Name.ToLower()"
                                 data-description="@item.Description?.ToLower()"
                                 data-price="@item.Price"
                                 data-quantity="@item.Quantity"
                                 data-daystock="@item.DayStock"
                                 data-product-id="@item.Id">

                                <div class="card product-card h-100 shadow-sm position-relative border-0 bg-transparent">
                                    @if (HasDiscount(item))
                                    {
                                        <div class="position-absolute top-0 start-0 m-2" style="z-index: 10;">
                                            <div class="discount-badge bg-success text-white px-2 py-1 rounded">
                                                <i class="fas fa-tag me-1"></i> OFFER
                                            </div>
                                        </div>
                                    }

                                    <div class="position-relative product-image-container">
                                        <img src="@Url.Content(item.ImageUrl)" alt="@item.Name"
                                             class="card-img-top product-image"
                                             style="height: 220px; width: 100%; "
                                             onerror="this.src='/images/placeholder.png'" loading="lazy">

                                        <!-- السعر على طرف الصورة -->
                                        <div class="position-absolute bottom-0 end-0 m-2 price-on-image">
                                            <div class="price-badge">
                                                <span class="fw-bold">@item.Price SAR</span>
                                            </div>
                                        </div>

                                        <!-- Details Button and Description - Appears on Hover -->
                                        <div class="product-overlay d-flex flex-column align-items-center justify-content-center">
                                            <a asp-action="Showprd" asp-route-id="@item.Id"
                                               class="btn btn-primary btn-details mb-3">
                                                <i class="fas fa-eye me-1"></i> View Details
                                            </a>
                                            <!-- الوصف باللون الذهبي -->
                                            <p class="gold-description text-center mb-0 ">
                                                @(item.Description?.Length > 80 ? item.Description.Substring(0, 80) + "..." : item.Description)
                                            </p>
                                        </div>

                                        @if (isLoggedIn)
                                        {
                                            <div class="position-absolute top-0 end-0 m-2" style="z-index: 20;">
                                                @{
                                                    var isFavorite = favorites.Contains(item.Id);
                                                }
                                                <button class="favorite-btn @(isFavorite ? "favorite-active" : "favorite-inactive")"
                                                        onclick="toggleFavorite('@item.Id', this)"
                                                        title="@(isFavorite ? "Remove from favorites" : "Add to favorites")">
                                                    <i class="fas fa-heart"></i>
                                                </button>
                                            </div>
                                        }

                                        @if (item.Quantity < 10 && item.Quantity > 0)
                                        {
                                            <div class="position-absolute top-0 start-0 m-2">
                                                <span class="badge bg-warning text-dark">Low Stock</span>
                                            </div>
                                        }
                                        else if (item.Quantity <= 0)
                                        {
                                            <div class="position-absolute top-0 start-0 m-2">
                                                <span class="badge bg-danger">Out of Stock</span>
                                            </div>
                                        }
                                    </div>

                                    <div class="card-body d-flex flex-column p-3">
                                        <h5 class="card-title text-dark mb-1" style="direction:rtl">@item.Name</h5>
                                        <p class=" text-center mb-0">
                                            @(item.Description?.Length > 80 ? item.Description.Substring(0, 80) + "..." : item.Description)
                                        </p>

                                        <!-- Stock Information -->
                                        <div class="stock-info mb-3">
                                            <div class="row text-center small text-muted">
                                                <div class="col-4">
                                                    <i class="fas fa-clock"></i><br>
                                                    @item.MinTime-@item.MaxTime min
                                                </div>
                                                <div class="col-4">
                                                    <i class="fas fa-box"></i><br>
                                                    @item.Quantity left
                                                </div>
                                                <div class="col-4">
                                                    <i class="fas fa-fire"></i><br>
                                                    @item.DayStock/day
                                                </div>
                                            </div>
                                        </div>

                                        <div class="d-grid gap-2 mt-auto">
                                            @if (item.Quantity > 0)
                                            {
                                                <button class="btn btn-brown btn-sm"
                                                        onclick="addToCart('@item.Id')">
                                                    <i class="fas fa-cart-plus me-1"></i> Add to Cart
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-secondary btn-sm" disabled>
                                                    <i class="fas fa-times me-1"></i> Out of Stock
                                                </button>
                                            }

                                            <!-- Admin Actions - Only visible for admin -->
                                            @if (isAdmin)
                                            {
                                                <div class="admin-actions mt-2 pt-2 border-top">
                                                    <div class="btn-group w-100" role="group">
                                                        <a asp-action="Edit" asp-route-id="@item.Id"
                                                           class="btn btn-warning btn-sm">
                                                            <i class="fas fa-edit me-1"></i>Edit
                                                        </a>
                                                        <a asp-action="Delete" asp-route-id="@item.Id"
                                                           class="btn btn-danger btn-sm">
                                                            <i class="fas fa-trash me-1"></i>Delete
                                                        </a>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>

    <!-- No Results Message -->
    <div id="noResults" class="text-center d-none mt-5">
        <div class="alert alert-warning py-5 bg-transparent border">
            <i class="fas fa-search fa-3x mb-3 text-warning"></i>
            <h3 class="text-dark">This product is not available</h3>
            <p class="mb-3 text-muted">No products match your search criteria. Try adjusting your search or browse different categories.</p>
            <button class="btn btn-primary" onclick="resetInteractiveSearch()">
                <i class="fas fa-redo me-2"></i>Show All Products
            </button>
        </div>
    </div>

    <!-- Floating Food Icons -->
    <div id="floatingIcons" class="floating-icons-container">
        <!-- Icons will be added by JavaScript -->
    </div>

    <!-- Call to Action Section -->
    <div class="row mt-5 mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-lg" style="background: linear-gradient(135deg, #ff9800 0%, #ff5722 100%);">
                <div class="card-body text-center text-white py-4">
                    <h3 class="mb-3">
                        <i class="fas fa-star me-2"></i>
                        Hungry for More?
                        <i class="fas fa-star ms-2"></i>
                    </h3>
                    <p class="lead mb-3">
                        @if (HasActiveDiscounts())
                        {
                            <text>Don't miss out on our exclusive offers! Order now and save big!</text>
                        }
                        else
                        {
                            <text>Subscribe to our newsletter for exclusive deals and early access to promotions!</text>
                        }
                    </p>
                    <div class="d-flex gap-3 justify-content-center flex-wrap">
                        <a asp-controller="MenuProduct" asp-action="GetAll" class="btn btn-light btn-lg">
                            <i class="fas fa-utensils me-2"></i>Browse Menu
                        </a>
                        @if (!isLoggedIn)
                        {
                            <a asp-controller="User" asp-action="Register" class="btn btn-outline-light btn-lg">
                                <i class="fas fa-user-plus me-2"></i>Join Now
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        /* Global Styles */
        :root {
            --primary-color: #1976d2;
            --secondary-color: #388e3c;
            --accent-color: #ff9800;
            --text-dark: #2c3e50;
            --text-light: #7f8c8d;
            --bg-light: #f8f9fa;
        }
        .main-content{
            padding-top:17px
        }
        body {
            background-color: var(--bg-light);
            color: var(--text-dark);
        }

        .carousel-fade .carousel-item {
            opacity: 0;
            transition: opacity 0.8s ease-in-out;
        }

            .carousel-fade .carousel-item.active {
                opacity: 1;
            }

        .discount-badge-large {
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .favorite-btn {
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 20;
        }

        .favorite-inactive i {
            color: #6c757d !important;
            transition: color 0.3s ease;
        }

        .favorite-inactive:hover i {
            color: #dc3545 !important;
        }

        .favorite-active i {
            color: #dc3545 !important;
            animation: heartBeat 0.3s ease;
        }

        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border-radius: 12px;
            overflow: hidden;
            background: transparent !important;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 25px rgba(0,0,0,0.1) !important;
            }

        /* Product Image Container */
        .product-image-container {
            overflow: hidden;
            position: relative;
            border-radius: 8px;
        }

        .product-image {
            transition: transform 0.5s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.03);
        }

        /* السعر على الصورة */
        .price-on-image {
            z-index: 15;
        }

        .price-badge {
            background: linear-gradient(135deg, #D4AF37 0%, #FFD700 100%);
            color: #000;
            padding: 8px 12px;
            border-radius: 20px;
            font-weight: bold;
            box-shadow: 0 2px 8px rgba(0,0,0,0.3);
        }

        /* Product Overlay for Details Button */
        .product-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.85);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 10;
            border-radius: 8px;
            padding: 20px;
        }

        .product-card:hover .product-overlay {
            opacity: 1;
        }

        .btn-details {
            border-radius: 25px;
            padding: 10px 20px;
            font-weight: 600;
            transform: translateY(20px);
            transition: transform 0.3s ease;
        }

        .product-card:hover .btn-details {
            transform: translateY(0);
        }

        /* الوصف الذهبي */
        .gold-description {
            color: #D4AF37;
            font-size: 0.95rem;
            line-height: 1.5;
            margin-top: 15px;
            max-width: 90%;
            transform: translateY(20px);
            transition: transform 0.3s ease 0.1s;
            opacity: 0;
        }

        .product-card:hover .gold-description {
            transform: translateY(0);
            opacity: 1;
        }

        /* زر الإضافة إلى السلة باللون البني */
        .btn-brown {
            background-color: #8B4513 !important;
            color: white !important;
            border: none;
            transition: all 0.3s ease;
        }

            .btn-brown:hover {
                background-color: #654321 !important;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            }

        /* Search Status */
        .search-status-bar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 8px;
            padding: 12px 20px;
        }

        .form-select:focus, .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(25, 118, 210, 0.25);
        }

        /* Floating Icons */
        .floating-icons-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .floating-icon {
            position: absolute;
            font-size: 24px;
            opacity: 0.1;
            animation: float 15s infinite linear;
            color: var(--primary-color);
        }

        /* Stock Info */
        .stock-info {
            background-color: rgba(0,0,0,0.03);
            border-radius: 8px;
            padding: 10px;
            margin-bottom: 10px;
        }

        /* Animations */
        @@keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }
        }

        @@keyframes heartBeat {
            0%, 100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.3);
            }
        }

        @@keyframes float {
            0% {
                transform: translateY(100vh) rotate(0deg);
            }

            100% {
                transform: translateY(-100px) rotate(360deg);
            }
        }

        /* تحسين التجاوب */
        @@media (max-width: 768px) {
            .input-group-lg {
                margin-bottom: 15px;
            }

            .form-select-lg {
                margin-bottom: 15px;
            }

            .product-card {
                margin-bottom: 20px;
            }

            .category-header h3 {
                font-size: 1.5rem;
            }
        }

        @@media (max-width: 576px) {
            .container-fluid {
                padding-left: 10px;
                padding-right: 10px;
            }

            .card-body {
                padding: 15px;
            }

            .product-image {
                height: 180px !important;
            }
        }

        /* Dark mode support */
        @@media (prefers-color-scheme: dark) {
            .card {
                background-color: #2d3748 !important;
                color: #e2e8f0 !important;
            }

            .text-dark {
                color: #e2e8f0 !important;
            }

            .text-muted {
                color: #a0aec0 !important;
            }

            .bg-light {
                background-color: #4a5568 !important;
            }
        }
    </style>


<script>
    // Global variables
    let searchTimeout;

    $(document).ready(function() {
        // Initialize carousels
        initializeCarousels();

        // Set up interactive search event listeners
        $('#interactiveSearch').on('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(performInteractiveSearch, 300);
        });

        $('#categoryFilter').on('change', function() {
            performInteractiveSearch();
        });

        // Create floating icons
        createFloatingIcons();
        
        // تحميل عدد السلة عند تحميل الصفحة
        updateCartCount();
    });

    // Interactive search function
    function performInteractiveSearch() {
        const searchTerm = $('#interactiveSearch').val().trim();
        const categoryId = $('#categoryFilter').val();

        $('#searchLoading').removeClass('d-none');
        $('#productsContainer').addClass('opacity-50');

        $.ajax({
            url: '@Url.Action("InteractiveSearch", "MenuProduct")',
            type: 'GET',
            data: {
                searchTerm: searchTerm,
                categoryId: categoryId || ''
            },
            success: function(response) {
                if (response.success) {
                    updateProductsDisplay(response.products, response.totalCount, response.hasResults);
                } else {
                    showToast('Search failed: ' + response.message, 'error');
                    resetToOriginalView();
                }
            },
            error: function(xhr, status, error) {
                console.error('Search error:', error);
                showToast('An error occurred during search', 'error');
                resetToOriginalView();
            },
            complete: function() {
                $('#searchLoading').addClass('d-none');
                $('#productsContainer').removeClass('opacity-50');
            }
        });
    }

    // Update products display based on search results
    function updateProductsDisplay(products, totalCount, hasResults) {
        const $container = $('#productsContainer');
        const $noResults = $('#noResults');
        const $searchStatus = $('#searchStatus');
        const $resultsCount = $('#resultsCount');

        if (!hasResults || products.length === 0) {
            $container.html('');
            $noResults.removeClass('d-none');
            $searchStatus.removeClass('d-none');
            $resultsCount.text('0 products found');
            return;
        }

        $noResults.addClass('d-none');
        $searchStatus.removeClass('d-none');
        $resultsCount.text(totalCount + ' product(s) found');

        const productsByCategory = groupProductsByCategory(products);

        let html = '';
        for (const [categoryName, categoryProducts] of Object.entries(productsByCategory)) {
            html += generateCategorySection(categoryName, categoryProducts);
        }

        $container.html(html);
        initializeProductInteractions();
    }

    // Group products by category
    function groupProductsByCategory(products) {
        const groups = {};
        products.forEach(product => {
            const category = product.category || 'Uncategorized';
            if (!groups[category]) {
                groups[category] = [];
            }
            groups[category].push(product);
        });
        return groups;
    }

    // Generate category section HTML
    function generateCategorySection(categoryName, products) {
        return `
            <div class="category-section mb-5">
                <div class="category-header p-3 mb-3 border-bottom">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0 fw-bold" style="color: #8B4513;">
                            <i class="fas fa-utensils me-2" style="color: #8B4513;"></i>
                            ${categoryName}
                        </h3>
                        <span class="badge bg-primary fs-6 category-count">
                            ${products.length} Items
                        </span>
                    </div>
                </div>
                <div class="row g-4 rounded-bottom">
                    ${products.map(product => generateProductCard(product)).join('')}
                </div>
            </div>
        `;
    }

    // Generate product card HTML
    function generateProductCard(product) {
        const isOutOfStock = product.quantity <= 0;
        const isLowStock = product.quantity < 10 && product.quantity > 0;
        const favoriteClass = product.isFavorite ? 'favorite-active' : 'favorite-inactive';
        const favoriteTitle = product.isFavorite ? 'Remove from favorites' : 'Add to favorites';

        return `
            <div class="col-12 col-sm-6 col-md-4 col-lg-3 product-item"
                 data-product-id="${product.id}">
                <div class="card product-card h-100 shadow-sm position-relative border-0 bg-transparent">
                    ${product.hasDiscount ? `
                        <div class="position-absolute top-0 start-0 m-2" style="z-index: 10;">
                            <div class="discount-badge bg-success text-white px-2 py-1 rounded">
                                <i class="fas fa-tag me-1"></i> OFFER
                            </div>
                        </div>
                    ` : ''}

                    <div class="position-relative product-image-container">
                        <div style="height: 220px; width: 100%; ">
                            <img src="${product.imageUrl}" alt="${product.name}"
                             class="card-img-top product-image"
                             style="height: 100%; width: 100%; "
                             onerror="this.src='/images/placeholder.png'" loading="lazy">
                        </div>

                        <div class="position-absolute bottom-0 end-0 m-2 price-on-image">
                            <div class="price-badge">
                                <span class="fw-bold">${product.price} SAR</span>
                            </div>
                        </div>

                        <div class="product-overlay d-flex flex-column align-items-center justify-content-center">
                            <a href="/MenuProduct/Showprd/${product.id}"
                               class="btn btn-primary btn-details mb-3">
                                <i class="fas fa-eye me-1"></i> View Details
                            </a>
                            <p class="gold-description text-center mb-0">
                                ${product.description && product.description.length > 80 ?
                                  product.description.substring(0, 80) + '...' :
                                  product.description || ''}
                            </p>
                        </div>

                        ${@isLoggedIn.ToString().ToLower() ? `
                            <div class="position-absolute top-0 end-0 m-2" style="z-index: 20;">
                                <button class="favorite-btn ${favoriteClass}"
                                        onclick="toggleFavorite('${product.id}', this)"
                                        title="${favoriteTitle}">
                                    <i class="fas fa-heart"></i>
                                </button>
                            </div>
                        ` : ''}

                        ${isLowStock ? `
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge bg-warning text-dark">Low Stock</span>
                            </div>
                        ` : ''}

                        ${isOutOfStock ? `
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge bg-danger">Out of Stock</span>
                            </div>
                        ` : ''}
                    </div>

                    <div class="card-body d-flex flex-column p-3">
                        <h5 class="card-title text-dark mb-1">${product.name}</h5>

                        <div class="stock-info mb-3">
                            <div class="row text-center small text-muted">
                                <div class="col-4">
                                    <i class="fas fa-clock"></i><br>
                                    ${product.minTime}-${product.maxTime} min
                                </div>
                                <div class="col-4">
                                    <i class="fas fa-box"></i><br>
                                    ${product.quantity} left
                                </div>
                                <div class="col-4">
                                    <i class="fas fa-fire"></i><br>
                                    ${product.dayStock}/day
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2 mt-auto">
                            ${!isOutOfStock ? `
                                <button class="btn btn-brown btn-sm"
                                        onclick="addToCart('${product.id}')">
                                    <i class="fas fa-cart-plus me-1"></i> Add to Cart
                                </button>
                            ` : `
                                <button class="btn btn-secondary btn-sm" disabled>
                                    <i class="fas fa-times me-1"></i> Out of Stock
                                </button>
                            `}

                            ${@isAdmin.ToString().ToLower() ? `
                                <div class="admin-actions mt-2 pt-2 border-top">
                                    <div class="btn-group w-100" role="group">
                                        <a href="/MenuProduct/Edit/${product.id}"
                                           class="btn btn-warning btn-sm">
                                            <i class="fas fa-edit me-1"></i>Edit
                                        </a>
                                        <a href="/MenuProduct/Delete/${product.id}"
                                           class="btn btn-danger btn-sm">
                                            <i class="fas fa-trash me-1"></i>Delete
                                        </a>
                                    </div>
                                </div>
                            ` : ''}
                        </div>
                    </div>
                </div>
            </div>
        `;
    }

    // Initialize product interactions after dynamic loading
    function initializeProductInteractions() {
        // Re-initialize any needed interactions
    }

    // Clear interactive search
    function clearInteractiveSearch() {
        $('#interactiveSearch').val('');
        performInteractiveSearch();
    }

    // Reset interactive search
    function resetInteractiveSearch() {
        $('#interactiveSearch').val('');
        $('#categoryFilter').val('');
        performInteractiveSearch();
    }

    // Reset to original view
    function resetToOriginalView() {
        $('#searchStatus').addClass('d-none');
        $('#noResults').addClass('d-none');
        location.reload();
    }

    // Initialize carousels
    function initializeCarousels() {
        if ($('#carouselExample').length) {
            new bootstrap.Carousel(document.getElementById('carouselExample'), {
                interval: 4000,
                wrap: true,
                pause: 'hover'
            });
        }

        if ($('#discountsCarousel').length) {
            new bootstrap.Carousel(document.getElementById('discountsCarousel'), {
                interval: 5000,
                wrap: true,
                pause: 'hover'
            });
        }
    }

    // Create floating food icons
    function createFloatingIcons() {
        const icons = ['🥘', '🍕', '🍔', '🍟', '🌭', '🍿', '🧁', '🍩'];
        const container = $('#floatingIcons');

        for (let i = 0; i < 15; i++) {
            const icon = $('<div class="floating-icon">' + icons[Math.floor(Math.random() * icons.length)] + '</div>');

            const left = Math.random() * 100;
            const delay = Math.random() * 15;
            const duration = 15 + Math.random() * 10;

            icon.css({
                left: left + '%',
                animationDelay: delay + 's',
                animationDuration: duration + 's'
            });

            container.append(icon);
        }
    }

    // Toggle favorite
    function toggleFavorite(productId, button) {
        $.ajax({
            url: '@Url.Action("ToggleFavorite", "Favorite")',
            type: 'POST',
            data: { productId: productId },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                if (response.success) {
                    if (response.isFavorite) {
                        $(button).removeClass('favorite-inactive').addClass('favorite-active');
                        $(button).attr('title', 'Remove from favorites');
                    } else {
                        $(button).removeClass('favorite-active').addClass('favorite-inactive');
                        $(button).attr('title', 'Add to favorites');
                    }
                    showToast(response.message, 'success');
                } else {
                    showToast(response.message, 'error');
                    if (response.redirect) {
                        window.location.href = response.redirect;
                    }
                }
            },
            error: function(xhr, status, error) {
                console.log('Error:', error);
                showToast('An error occurred. Please try again.', 'error');
            }
        });
    }

    // Add to cart - دالة محدثة
    function addToCart(productId) {
        $.ajax({
            url: '@Url.Action("AddToCart", "Cart")',
            type: 'POST',
            data: { productId: productId, quantity: 1 },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                if (response.success) {
                    showToast(response.message, 'success');
                    // تحديث عدد السلة فوراً
                    updateCartCount();
                } else {
                    showToast(response.message, 'error');
                    if (response.redirect) {
                        window.location.href = response.redirect;
                    }
                }
            },
            error: function() {
                showToast('An error occurred. Please try again.', 'error');
            }
        });
    }

    // Update cart count - دالة محدثة ومحسنة
    function updateCartCount() {
        $.ajax({
            url: '@Url.Action("GetCartCount", "MenuProduct")',
            type: 'GET',
            success: function(data) {
                if (data.success && data.count !== undefined) {
                    // تحديث الرقم في الـ badge
                    const $cartBadge = $('.cart-badge');
                    if (data.count > 0) {
                        if ($cartBadge.length > 0) {
                            $cartBadge.text(data.count).show();
                        } else {
                            // إنشاء badge جديد إذا لم يكن موجود
                            $('.nav-cart-icon').append(`<span class="cart-badge">${data.count}</span>`);
                        }
                    } else {
                        $cartBadge.hide();
                    }
                    
                    // إضافة animation بسيط
                    $cartBadge.addClass('animate__animated animate__pulse');
                    setTimeout(function() {
                        $cartBadge.removeClass('animate__animated animate__pulse');
                    }, 1000);
                }
            },
            error: function(xhr, status, error) {
                console.log('Error updating cart count:', error);
            }
        });
    }

    // Show toast notification
    function showToast(message, type) {
        const bgColor = type === 'success' ? '#28a745' : '#dc3545';
        const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';

        const toast = $(`
            <div class="position-fixed top-0 end-0 p-3" style="z-index: 9999;">
                <div class="toast show" role="alert">
                    <div class="toast-body" style="background-color: ${bgColor}; color: white; border-radius: 8px;">
                        <i class="fas ${icon} me-2"></i>${message}
                    </div>
                </div>
            </div>
        `);

        $('body').append(toast);
        setTimeout(function() {
            toast.fadeOut(function() { $(this).remove(); });
        }, 3000);
    }
</script>
}

@functions {
    // Check if product has active discount
    public bool HasDiscount(Models.MenuProduct product)
    {
        var now = DateTime.UtcNow;
        return _context.Discounts.Any(d =>
            d.IsActive &&
            d.StartDate <= now &&
            d.EndDate >= now &&
            (d.CategoryId == null || d.CategoryId == product.CategoryId)
        );
    }

    // Check if there are any active discounts
    public bool HasActiveDiscounts()
    {
        var now = DateTime.UtcNow;
        return _context.Discounts.Any(d => d.IsActive && d.StartDate <= now && d.EndDate >= now);
    }
}