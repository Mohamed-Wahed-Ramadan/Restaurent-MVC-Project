@using Microsoft.EntityFrameworkCore
@using Context
@model IEnumerable<Models.MenuProduct>
@inject AppDpContext _context

@{
    ViewData["Title"] = "Our Menu";

    // استخدام النظام الموحد للجلسة
    var userSessionJson = Context.Session.GetString("CurrentUser");
    var isLoggedIn = !string.IsNullOrEmpty(userSessionJson);
    var isAdmin = false;
    var userId = "";
    var favorites = new List<int>();

    if (isLoggedIn)
    {
        try
        {
            var userSession = System.Text.Json.JsonSerializer.Deserialize<System.Text.Json.Nodes.JsonObject>(userSessionJson);
            if (userSession != null)
            {
                isAdmin = userSession["IsAdmin"]?.GetValue<bool>() ?? false;
                userId = userSession["Id"]?.GetValue<string>() ?? "";

                // جلب المفضلات من قاعدة البيانات
                if (!string.IsNullOrEmpty(userId))
                {
                    favorites = await _context.Favorites
                        .Where(f => f.UserId == userId)
                        .Select(f => f.MenuProductId)
                        .ToListAsync();
                }
            }
        }
        catch
        {
            isLoggedIn = false;
        }
    }

    // جلب جميع الفئات النشطة من قاعدة البيانات
    var activeCategories = await _context.Categories
        .Where(c => !c.IsDeleted)
        .OrderBy(c => c.Name)
        .ToListAsync();

    // تجميع المنتجات حسب الفئة
    var productsByCategory = Model.GroupBy(p => p.Category?.Name ?? "Uncategorized")
                                 .OrderBy(g => g.Key);
    var totalProducts = Model.Count();

    // حساب نطاق الأسعار
    var minPrice = Model.Any() ? Model.Min(p => p.Price) : 0;
    var maxPrice = Model.Any() ? Model.Max(p => p.Price) : 200;
}

<div class="container-fluid px-3 px-md-5 mt-4">
    <!-- Carousel Section -->
    <div id="carouselExample" class="carousel slide mb-4">
        <div class="carousel-inner">
            <div class="carousel-item active" style="width:100% ; height:500px;">
                <img src="/images/res1.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 1">
            </div>
            <div class="carousel-item" style="width:100% ; height:500px;">
                <img src="/images/res7.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 2">
            </div>
            <div class="carousel-item" style="width:100% ; height:500px;">
                <img src="/images/res2.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 3">
            </div>
            <div class="carousel-item" style="width:100% ; height:500px;">
                <img src="/images/res3.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 4">
            </div>
            <div class="carousel-item" style="width:100% ; height:500px;">
                <img src="/images/res4.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 5">
            </div>
            <div class="carousel-item" style="width:100% ; height:500px;">
                <img src="/images/res5.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 6">
            </div>
            <div class="carousel-item" style="width:100% ; height:500px;">
                <img src="/images/res6.jpg" class="d-block w-100" style="width:100% ; height:100%;" alt="Restaurant Image 7">
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>

    <!-- Active Discounts Banner -->
    <div class="row mb-4">
        <div class="col-12">
            @if (ViewBag.ActiveDiscounts != null && ((List<Models.Discount>)ViewBag.ActiveDiscounts).Any())
            {
                <!-- Discounts Carousel -->
                <div id="discountsCarousel" class="carousel slide bg-gradient shadow-sm rounded" data-bs-ride="carousel" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <div class="carousel-inner py-3">
                        @{
                            var discounts = (List<Models.Discount>)ViewBag.ActiveDiscounts;
                            for (int i = 0; i < discounts.Count; i++)
                            {
                                var discount = discounts[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <div class="container">
                                        <div class="row align-items-center text-white px-3">
                                            <div class="col-md-2 text-center">
                                                <div class="discount-badge-large">
                                                    <i class="fas fa-percentage fa-2x mb-2"></i>
                                                    <h2 class="mb-0 fw-bold">@discount.DiscountPercentage%</h2>
                                                    <small>OFF</small>
                                                </div>
                                            </div>
                                            <div class="col-md-7">
                                                <h4 class="mb-2 fw-bold">
                                                    <i class="fas fa-tag me-2"></i>@discount.Name
                                                </h4>
                                                <p class="mb-2">@discount.Description</p>
                                                <div class="d-flex gap-3 flex-wrap">
                                                    @if (discount.CategoryId != null)
                                                    {
                                                        <span class="badge bg-light text-dark">
                                                            <i class="fas fa-utensils me-1"></i>@discount.Category?.Name
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-success">
                                                            <i class="fas fa-check-circle me-1"></i>All Categories
                                                        </span>
                                                    }
                                                    @if (discount.IsAgeBased)
                                                    {
                                                        <span class="badge bg-info">
                                                            <i class="fas fa-users me-1"></i>Ages @discount.MinAge - @discount.MaxAge
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="col-md-3 text-center">
                                                <div class="d-flex flex-column">
                                                    <small class="mb-1 opacity-75">Valid Until</small>
                                                    <h5 class="mb-0 fw-bold">@discount.EndDate.ToString("MMM dd, yyyy")</h5>
                                                    <small class="mt-2 badge bg-warning text-dark">
                                                        <i class="fas fa-clock me-1"></i>Limited Time
                                                    </small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    @if (discounts.Count > 1)
                    {
                        <button class="carousel-control-prev" type="button" data-bs-target="#discountsCarousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#discountsCarousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>

                        <div class="carousel-indicators">
                            @for (int i = 0; i < discounts.Count; i++)
                            {
                                <button type="button" data-bs-target="#discountsCarousel"
                                        data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")"
                                        aria-current="@(i == 0 ? "true" : "false")"
                                        aria-label="Slide @(i + 1)"></button>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-dismissible fade show border-0 shadow-sm mb-0"
                     style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);">
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert"></button>
                    <div class="row align-items-center text-white py-2">
                        <div class="col-md-2 text-center">
                            <i class="fas fa-gift fa-3x"></i>
                        </div>
                        <div class="col-md-8">
                            <h4 class="mb-1 fw-bold">
                                <i class="fas fa-sparkles me-2"></i>Special Offers Coming Soon!
                            </h4>
                            <p class="mb-0">Stay tuned for exclusive deals and amazing discounts on your favorite dishes</p>
                        </div>
                        <div class="col-md-2 text-center">
                            <span class="badge bg-light text-dark fs-6 px-3 py-2">
                                <i class="fas fa-bell me-1"></i>Get Notified
                            </span>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Advanced Search Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-gradient text-white py-3" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="fas fa-search me-2"></i>Search & Filter Menu
                        </h4>
                        <button class="btn btn-light btn-sm" type="button" data-bs-toggle="collapse"
                                data-bs-target="#searchFilters" aria-expanded="true" aria-controls="searchFilters">
                            <i class="fas fa-filter me-1"></i>Toggle Filters
                        </button>
                    </div>
                </div>
                <div class="card-body collapse show" id="searchFilters">
                    <div class="row g-3">
                        <!-- Search by Name -->
                        <div class="col-md-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-font me-1"></i>Search by Name
                            </label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="fas fa-utensils text-primary"></i>
                                </span>
                                <input type="text" class="form-control" id="searchByName"
                                       placeholder="Enter product name..."
                                       autocomplete="off">
                                <button class="btn btn-outline-secondary" type="button" onclick="clearSearchName()">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <small class="text-muted">Search for dishes by name</small>
                        </div>

                        <!-- Filter by Category -->
                        <div class="col-md-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-list me-1"></i>Filter by Category
                            </label>
                            <div class="input-group">
                                <span class="input-group-text bg-light">
                                    <i class="fas fa-filter text-success"></i>
                                </span>
                                <select class="form-select" id="filterCategory">
                                    <option value="">All Categories</option>
                                    @foreach (var category in activeCategories)
                                    {
                                        <option value="@category.Name">@category.Name</option>
                                    }
                                </select>
                                <button class="btn btn-outline-secondary" type="button" onclick="clearCategory()">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <small class="text-muted">@activeCategories.Count categories available</small>
                        </div>

                        <!-- Price Range -->
                        <div class="col-md-4">
                            <label class="form-label fw-bold">
                                <i class="fas fa-money-bill-wave me-1"></i>Price Range (EGP)
                            </label>
                            <div class="d-flex gap-2 align-items-center">
                                <input type="number" class="form-control" id="minPrice"
                                       placeholder="Min" min="0" max="@maxPrice" value="@minPrice">
                                <span class="text-muted">-</span>
                                <input type="number" class="form-control" id="maxPrice"
                                       placeholder="Max" min="0" max="@maxPrice" value="@maxPrice">
                                <button class="btn btn-outline-secondary" type="button" onclick="resetPriceRange()">
                                    <i class="fas fa-redo"></i>
                                </button>
                            </div>
                            <div class="mt-2">
                                <input type="range" class="form-range" id="priceRange"
                                       min="@minPrice" max="@maxPrice" value="@maxPrice">
                                <div class="d-flex justify-content-between">
                                    <small class="text-muted">@minPrice EGP</small>
                                    <small class="text-primary fw-bold" id="currentPrice">@maxPrice EGP</small>
                                    <small class="text-muted">@maxPrice EGP</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Advanced Filters Row -->
                    <div class="row g-3 mt-2">
                        <!-- Sort By -->
                        <div class="col-md-3">
                            <label class="form-label fw-bold">
                                <i class="fas fa-sort me-1"></i>Sort By
                            </label>
                            <select class="form-select" id="sortBy">
                                <option value="name-asc">Name (A-Z)</option>
                                <option value="name-desc">Name (Z-A)</option>
                                <option value="price-asc">Price (Low to High)</option>
                                <option value="price-desc">Price (High to Low)</option>
                                <option value="popular">Most Popular</option>
                            </select>
                        </div>

                        <!-- Availability Filter -->
                        <div class="col-md-3">
                            <label class="form-label fw-bold">
                                <i class="fas fa-box me-1"></i>Availability
                            </label>
                            <select class="form-select" id="availabilityFilter">
                                <option value="all">All Items</option>
                                <option value="in-stock">In Stock Only</option>
                                <option value="low-stock">Low Stock</option>
                            </select>
                        </div>

                        <!-- Action Buttons -->
                        <div class="col-md-6 d-flex align-items-end gap-2">
                            <button class="btn btn-primary flex-fill" onclick="applyFilters()">
                                <i class="fas fa-search me-2"></i>Apply Filters
                            </button>
                            <button class="btn btn-outline-secondary flex-fill" onclick="resetAllFilters()">
                                <i class="fas fa-redo me-2"></i>Reset All
                            </button>
                        </div>
                    </div>

                    <!-- Results Summary -->
                    <div class="row mt-3">
                        <div class="col-12">
                            <div class="alert alert-info mb-0 d-flex justify-content-between align-items-center">
                                <div>
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong id="resultsCount">@totalProducts</strong> products found
                                    <span id="activeFiltersText"></span>
                                </div>
                                <div class="d-flex gap-2" id="activeFilterBadges">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Products by Category -->
    <div id="productsContainer">
        @foreach (var categoryGroup in productsByCategory)
        {
            <div class="category-section mb-5" data-category="@categoryGroup.Key">
                <!-- Category Header -->
                <div class="category-header bg-gradient-primary text-white p-4 rounded-top">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0">
                            <i class="fas fa-utensils me-2"></i>
                            @categoryGroup.Key
                        </h3>
                        <span class="badge bg-light text-dark fs-6 category-count">
                            @categoryGroup.Count() Items
                        </span>
                    </div>
                </div>

                <!-- Products Grid -->
                <div class="row g-4 p-4 bg-light rounded-bottom">
                    @foreach (var item in categoryGroup)
                    {
                        <div class="col-12 col-sm-6 col-md-4 col-lg-3 product-item"
                             data-category="@categoryGroup.Key"
                             data-name="@item.Name.ToLower()"
                             data-description="@item.Description.ToLower()"
                             data-price="@item.Price"
                             data-quantity="@item.Quantity"
                             data-product-id="@item.Id">

                            <div class="card product-card h-100 shadow-sm position-relative">
                                @if (HasDiscount(item))
                                {
                                    <div class="position-absolute top-0 start-0 m-0" style="z-index: 10;">
                                        <div class="discount-badge">
                                            <i class="fas fa-tag"></i> OFFER!
                                        </div>
                                    </div>
                                }

                                <div class="position-relative">
                                    <img src="@Url.Content(item.ImageUrl)" alt="@item.Name"
                                         class="card-img-top product-image"
                                         style="height: 200px; width: 100%; object-fit: cover;"
                                         onerror="this.src='/images/placeholder.png'">

                                    @if (isLoggedIn)
                                    {
                                        <div class="position-absolute top-0 end-0 m-2">
                                            @{
                                                var isFavorite = favorites.Contains(item.Id);
                                            }
                                            <button class="favorite-btn @(isFavorite ? "favorite-active" : "favorite-inactive")"
                                                    onclick="toggleFavorite('@item.Id', this)"
                                                    title="@(isFavorite ? "Remove from favorites" : "Add to favorites")">
                                                <i class="fas fa-heart"></i>
                                            </button>
                                        </div>
                                    }

                                    <div class="position-absolute bottom-0 start-0 m-2">
                                        <span class="badge bg-success fs-6">@item.Price EGP</span>
                                    </div>

                                    @if (item.Quantity < 10 && item.Quantity > 0)
                                    {
                                        <div class="position-absolute bottom-0 end-0 m-2">
                                            <span class="badge bg-danger">Low Stock</span>
                                        </div>
                                    }
                                </div>

                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@item.Name</h5>
                                    <p class="card-text text-muted flex-grow-1">
                                        @(item.Description?.Length > 80 ? item.Description.Substring(0, 80) + "..." : item.Description)
                                    </p>

                                    <div class="mt-auto">
                                        <div class="row text-center small text-muted mb-3">
                                            <div class="col-4">
                                                <i class="fas fa-clock"></i><br>
                                                @item.MinTime-@item.MaxTime min
                                            </div>
                                            <div class="col-4">
                                                <i class="fas fa-box"></i><br>
                                                @item.Quantity left
                                            </div>
                                            <div class="col-4">
                                                <i class="fas fa-fire"></i><br>
                                                @item.DayStock/day
                                            </div>
                                        </div>

                                        <div class="d-grid gap-2">
                                            @if (item.Quantity > 0)
                                            {
                                                <button class="btn btn-success btn-sm"
                                                        onclick="addToCart('@item.Id')">
                                                    <i class="fas fa-cart-plus"></i> Add to Cart
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-secondary btn-sm" disabled>
                                                    <i class="fas fa-times"></i> Out of Stock
                                                </button>
                                            }

                                            <a asp-action="Showprd" asp-route-id="@item.Id"
                                               class="btn btn-info btn-sm">
                                                <i class="fas fa-eye"></i> Details
                                            </a>

                                            @if (isAdmin)
                                            {
                                                <div class="btn-group w-100" role="group">
                                                    <a asp-action="Edit" asp-route-id="@item.Id"
                                                       class="btn btn-warning btn-sm">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.Id"
                                                       class="btn btn-danger btn-sm">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <!-- No Results Message -->
    <div id="noResults" class="text-center d-none mt-5">
        <div class="alert alert-warning py-5">
            <i class="fas fa-search fa-3x mb-3 text-warning"></i>
            <h3>No products found</h3>
            <p class="mb-3">Try adjusting your search criteria or browse different categories</p>
            <button class="btn btn-primary" onclick="resetAllFilters()">
                <i class="fas fa-redo me-2"></i>Reset Filters
            </button>
        </div>
    </div>

    <!-- Call to Action Section -->
    <div class="row mt-5 mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-lg" style="background: linear-gradient(135deg, #f5af19 0%, #f12711 100%);">
                <div class="card-body text-center text-white py-4">
                    <h3 class="mb-3">
                        <i class="fas fa-star me-2"></i>
                        Hungry for More Deals?
                        <i class="fas fa-star ms-2"></i>
                    </h3>
                    <p class="lead mb-3">
                        @if (HasActiveDiscounts())
                        {
                            <text>Don't miss out on our exclusive offers! Order now and save big!</text>
                        }
                        else
                        {
                            <text>Subscribe to our newsletter for exclusive deals and early access to promotions!</text>
                        }
                    </p>
                    <div class="d-flex gap-3 justify-content-center flex-wrap">
                        <a asp-controller="MenuProduct" asp-action="GetAll" class="btn btn-light btn-lg">
                            <i class="fas fa-utensils me-2"></i>Browse Menu
                        </a>
                        @if (!isLoggedIn)
                        {
                            <a asp-controller="User" asp-action="Register" class="btn btn-outline-light btn-lg">
                                <i class="fas fa-user-plus me-2"></i>Join Now
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .discount-badge-large {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            padding: 15px;
            backdrop-filter: blur(10px);
        }

        .discount-badge {
            background: linear-gradient(135deg, #f12711 0%, #f5af19 100%);
            color: white;
            padding: 5px 15px;
            border-radius: 0 0 10px 0;
            font-weight: bold;
            font-size: 0.75rem;
            box-shadow: 0 2px 5px rgba(0,0,0,0.3);
            animation: pulse 2s infinite;
        }

        .favorite-btn {
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }

        .favorite-inactive i {
            color: #6c757d !important;
            transition: color 0.3s ease;
        }

        .favorite-inactive:hover i {
            color: #dc3545 !important;
        }

        .favorite-active i {
            color: #dc3545 !important;
            animation: heartBeat 0.3s ease;
        }

        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0,0,0,0.15) !important;
            }

        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .filter-badge {
            animation: slideIn 0.3s ease;
        }

        @@keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }
        }

        @@keyframes heartBeat {
            0%, 100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.3);
            }
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
    </style>

    <script>
        // Global variables for filters
        let originalMinPrice = @minPrice;
        let originalMaxPrice = @maxPrice;

        $(document).ready(function() {
            // Initialize carousel
            if ($('#discountsCarousel').length) {
                new bootstrap.Carousel(document.getElementById('discountsCarousel'), {
                    interval: 5000,
                    wrap: true,
                    pause: 'hover'
                });
            }

            // Initialize price range slider
            initializePriceSlider();

            // Add event listeners for real-time search
            $('#searchByName').on('input', debounce(applyFilters, 300));
            $('#filterCategory').on('change', applyFilters);
            $('#minPrice, #maxPrice').on('input', debounce(applyFilters, 500));
            $('#sortBy').on('change', applyFilters);
            $('#availabilityFilter').on('change', applyFilters);

            // Check favorite status
            $('.favorite-btn').each(function() {
                var productId = $(this).closest('.product-item').data('product-id');
                checkFavoriteStatus(productId, $(this));
            });
        });

        // Price slider initialization
        function initializePriceSlider() {
            $('#priceRange').on('input', function() {
                var value = $(this).val();
                $('#maxPrice').val(value);
                $('#currentPrice').text(value + ' EGP');
            });

            $('#maxPrice').on('input', function() {
                var value = $(this).val();
                $('#priceRange').val(value);
                $('#currentPrice').text(value + ' EGP');
            });
        }

        // Debounce function for search optimization
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Apply all filters
        function applyFilters() {
            const searchName = $('#searchByName').val().toLowerCase().trim();
            const selectedCategory = $('#filterCategory').val();
            const minPrice = parseFloat($('#minPrice').val()) || 0;
            const maxPrice = parseFloat($('#maxPrice').val()) || originalMaxPrice;
            const sortBy = $('#sortBy').val();
            const availability = $('#availabilityFilter').val();

            let visibleCount = 0;
            let activeFilters = [];

            // Hide all products initially
            $('.product-item').hide();
            $('.category-section').hide();

            // Filter products
            $('.product-item').each(function() {
                const $product = $(this);
                const productName = $product.data('name');
                const productDescription = $product.data('description');
                const productCategory = $product.data('category');
                const productPrice = parseFloat($product.data('price'));
                const productQuantity = parseInt($product.data('quantity'));

                let showProduct = true;

                // Name filter
                if (searchName && !productName.includes(searchName) && !productDescription.includes(searchName)) {
                    showProduct = false;
                }

                // Category filter
                if (selectedCategory && productCategory !== selectedCategory) {
                    showProduct = false;
                }

                // Price filter
                if (productPrice < minPrice || productPrice > maxPrice) {
                    showProduct = false;
                }

                // Availability filter
                if (availability === 'in-stock' && productQuantity <= 0) {
                    showProduct = false;
                } else if (availability === 'low-stock' && (productQuantity <= 0 || productQuantity >= 10)) {
                    showProduct = false;
                }

                if (showProduct) {
                    $product.show();
                    visibleCount++;
                }
            });

            // Sort products
            sortProducts(sortBy);

            // Show/hide categories and update counts
            $('.category-section').each(function() {
                const $categorySection = $(this);
                const visibleProducts = $categorySection.find('.product-item:visible').length;

                if (visibleProducts > 0) {
                    $categorySection.show();
                    $categorySection.find('.category-count').text(visibleProducts + ' Items');
                }
            });

            // Update results count
            $('#resultsCount').text(visibleCount);

            // Build active filters badges
            if (searchName) {
                activeFilters.push({ label: 'Name', value: searchName, clearFunc: 'clearSearchName' });
            }
            if (selectedCategory) {
                activeFilters.push({ label: 'Category', value: selectedCategory, clearFunc: 'clearCategory' });
            }
            if (minPrice > originalMinPrice || maxPrice < originalMaxPrice) {
                activeFilters.push({ label: 'Price', value: minPrice + '-' + maxPrice + ' EGP', clearFunc: 'resetPriceRange' });
            }
            if (availability !== 'all') {
                activeFilters.push({ label: 'Availability', value: availability, clearFunc: 'clearAvailability' });
            }

            updateActiveFilterBadges(activeFilters);

            // Show/hide no results message
            if (visibleCount === 0) {
                $('#noResults').removeClass('d-none');
                $('#productsContainer').hide();
            } else {
                $('#noResults').addClass('d-none');
                $('#productsContainer').show();
            }
        }

        // Sort products
        function sortProducts(sortBy) {
            $('.category-section').each(function() {
                const $categorySection = $(this);
                const $productsContainer = $categorySection.find('.row.g-4');
                const $products = $productsContainer.find('.product-item:visible');

                $products.sort(function(a, b) {
                    const $a = $(a);
                    const $b = $(b);

                    switch(sortBy) {
                        case 'name-asc':
                            return $a.data('name').localeCompare($b.data('name'));
                        case 'name-desc':
                            return $b.data('name').localeCompare($a.data('name'));
                        case 'price-asc':
                            return $a.data('price') - $b.data('price');
                        case 'price-desc':
                            return $b.data('price') - $a.data('price');
                        case 'popular':
                            return $b.data('quantity') - $a.data('quantity');
                        default:
                            return 0;
                    }
                });

                $products.detach().appendTo($productsContainer);
            });
        }

        // Update active filter badges
        function updateActiveFilterBadges(filters) {
            const $container = $('#activeFilterBadges');
            $container.empty();

            if (filters.length > 0) {
                $('#activeFiltersText').html(' - <span class="badge bg-primary">' + filters.length + ' filter(s) active</span>');

                filters.forEach(filter => {
                    const badge = $(`
                        <span class="badge bg-secondary filter-badge">
                            <strong>${filter.label}:</strong> ${filter.value}
                            <button type="button" class="btn-close btn-close-white btn-sm ms-1"
                                    onclick="${filter.clearFunc}()"
                                    style="font-size: 0.6rem; vertical-align: middle;">
                            </button>
                        </span>
                    `);
                    $container.append(badge);
                });
            } else {
                $('#activeFiltersText').text('');
            }
        }

        // Clear functions
        function clearSearchName() {
            $('#searchByName').val('');
            applyFilters();
        }

        function clearCategory() {
            $('#filterCategory').val('');
            applyFilters();
        }

        function resetPriceRange() {
            $('#minPrice').val(originalMinPrice);
            $('#maxPrice').val(originalMaxPrice);
            $('#priceRange').val(originalMaxPrice);
            $('#currentPrice').text(originalMaxPrice + ' EGP');
            applyFilters();
        }

        function clearAvailability() {
            $('#availabilityFilter').val('all');
            applyFilters();
        }

        function resetAllFilters() {
            $('#searchByName').val('');
            $('#filterCategory').val('');
            $('#minPrice').val(originalMinPrice);
            $('#maxPrice').val(originalMaxPrice);
            $('#priceRange').val(originalMaxPrice);
            $('#currentPrice').text(originalMaxPrice + ' EGP');
            $('#sortBy').val('name-asc');
            $('#availabilityFilter').val('all');

            // Show all products
            $('.product-item').show();
            $('.category-section').show();

            // Reset category counts
            $('.category-section').each(function() {
                const $categorySection = $(this);
                const totalProducts = $categorySection.find('.product-item').length;
                $categorySection.find('.category-count').text(totalProducts + ' Items');
            });

            $('#resultsCount').text($('.product-item').length);
            $('#activeFiltersText').text('');
            $('#activeFilterBadges').empty();
            $('#noResults').addClass('d-none');
            $('#productsContainer').show();

            showToast('All filters have been reset', 'success');
        }

        // Check favorite status
        function checkFavoriteStatus(productId, button) {
            $.get('@Url.Action("IsFavorite", "Favorite")', { productId: productId }, function(data) {
                if (data.isFavorite) {
                    $(button).removeClass('favorite-inactive').addClass('favorite-active');
                    $(button).attr('title', 'Remove from favorites');
                } else {
                    $(button).removeClass('favorite-active').addClass('favorite-inactive');
                    $(button).attr('title', 'Add to favorites');
                }
            }).fail(function() {
                console.log('Failed to check favorite status');
            });
        }

        // Toggle favorite
        function toggleFavorite(productId, button) {
            $.ajax({
                url: '@Url.Action("ToggleFavorite", "Favorite")',
                type: 'POST',
                data: { productId: productId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        if (response.isFavorite) {
                            $(button).removeClass('favorite-inactive').addClass('favorite-active');
                            $(button).attr('title', 'Remove from favorites');
                        } else {
                            $(button).removeClass('favorite-active').addClass('favorite-inactive');
                            $(button).attr('title', 'Add to favorites');
                        }
                        showToast(response.message, 'success');
                    } else {
                        showToast(response.message, 'error');
                        if (response.redirect) {
                            window.location.href = response.redirect;
                        }
                    }
                },
                error: function(xhr, status, error) {
                    console.log('Error:', error);
                    showToast('An error occurred. Please try again.', 'error');
                }
            });
        }

        // Add to cart
        function addToCart(productId) {
            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                type: 'POST',
                data: { productId: productId, quantity: 1 },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showToast(response.message, 'success');
                        updateCartCount();
                    } else {
                        showToast(response.message, 'error');
                        if (response.redirect) {
                            window.location.href = response.redirect;
                        }
                    }
                },
                error: function() {
                    showToast('An error occurred. Please try again.', 'error');
                }
            });
        }

        // Update cart count
        function updateCartCount() {
            $.get('@Url.Action("GetCartCount", "Cart")', function(data) {
                if (data.count !== undefined) {
                    $('#cartCount').text(data.count);
                }
            });
        }

        // Show toast notification
        function showToast(message, type) {
            const bgColor = type === 'success' ? '#28a745' : '#dc3545';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';

            const toast = $(`
                <div class="position-fixed top-0 end-0 p-3" style="z-index: 9999;">
                    <div class="toast show" role="alert">
                        <div class="toast-body" style="background-color: ${bgColor}; color: white; border-radius: 8px;">
                            <i class="fas ${icon} me-2"></i>${message}
                        </div>
                    </div>
                </div>
            `);

            $('body').append(toast);
            setTimeout(function() {
                toast.fadeOut(function() { $(this).remove(); });
            }, 3000);
        }
    </script>
}

@functions {
    // Check if product has active discount
    public bool HasDiscount(Models.MenuProduct product)
    {
        var now = DateTime.UtcNow;
        return _context.Discounts.Any(d =>
            d.IsActive &&
            d.StartDate <= now &&
            d.EndDate >= now &&
            (d.CategoryId == null || d.CategoryId == product.CategoryId)
        );
    }

    // Check if there are any active discounts
    public bool HasActiveDiscounts()
    {
        var now = DateTime.UtcNow;
        return _context.Discounts.Any(d => d.IsActive && d.StartDate <= now && d.EndDate >= now);
    }
}