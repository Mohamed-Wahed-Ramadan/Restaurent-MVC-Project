@model Models.MenuProduct

@{
    ViewData["Title"] = "Showprd";

    // استخدام النظام الموحد للجلسة
    var userSessionJson = Context.Session.GetString("CurrentUser");
    var isLoggedIn = !string.IsNullOrEmpty(userSessionJson);
    var isAdmin = false;
    var userId = "";

    if (isLoggedIn)
    {
        try
        {
            var userSession = System.Text.Json.JsonSerializer.Deserialize<System.Text.Json.Nodes.JsonObject>(userSessionJson);
            if (userSession != null)
            {
                isAdmin = userSession["IsAdmin"]?.GetValue<bool>() ?? false;
                userId = userSession["Id"]?.GetValue<string>() ?? "";
            }
        }
        catch
        {
            isLoggedIn = false;
        }
    }
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2><i class="fas fa-info-circle"></i> Product Details</h2>
        <a asp-action="GetAll" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
    <hr />

    <div class="card shadow-lg">
        <div class="card-body">
            <div class="row">
                <div class="col-md-5">
                    <div class="text-center mb-3">
                        <img src="@Model.ImageUrl" alt="@Model.Name"
                             class="img-fluid rounded shadow-sm"
                             style="max-height: 400px;"
                             onerror="this.src='/images/default.png'" />
                    </div>

                    <!-- Action Buttons Section -->
                    <div class="d-grid gap-2">
                        <!-- Add to Cart Button - Visible for all logged in users -->
                        @if (isLoggedIn)
                        {
                            if (Model.Quantity > 0)
                            {
                                <button class="btn btn-success btn-lg" onclick="addToCart(@Model.Id)">
                                    <i class="fas fa-cart-plus"></i> Add to Cart
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-secondary btn-lg" disabled>
                                    <i class="fas fa-times-circle"></i> Out of Stock
                                </button>
                            }
                        }
                        else
                        {
                            <a asp-controller="User" asp-action="Login" class="btn btn-primary btn-lg">
                                <i class="fas fa-sign-in-alt"></i> Login to Add to Cart
                            </a>
                        }

                        <!-- Admin Only Buttons -->
                        @if (isAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                                <i class="fas fa-edit"></i> Edit Product
                            </a>
                            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                                <i class="fas fa-trash"></i> Delete Product
                            </a>
                        }
                    </div>

                    <!-- Stock Status Alert -->
                    @if (Model.Quantity <= 10 && Model.Quantity > 0)
                    {
                        <div class="alert alert-warning mt-3">
                            <i class="fas fa-exclamation-triangle"></i>
                            <strong>Low Stock!</strong> Only @Model.Quantity units left.
                        </div>
                    }
                    else if (Model.Quantity == 0)
                    {
                        <div class="alert alert-danger mt-3">
                            <i class="fas fa-times-circle"></i>
                            <strong>Out of Stock!</strong> This product is currently unavailable.
                        </div>
                    }
                </div>

                <div class="col-md-7">
                    <h3 class="text-primary mb-3">@Model.Name</h3>

                    <div class="mb-4">
                        <span class="badge bg-info fs-6">@Model.Category.Name</span>
                    </div>

                    <dl class="row">
                        <dt class="col-sm-4">
                            <i class="fas fa-tag text-primary"></i> Price:
                        </dt>
                        <dd class="col-sm-8">
                            <h4 class="text-success mb-0">@Model.Price SAR</h4>
                        </dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-boxes text-warning"></i> Quantity:
                        </dt>
                        <dd class="col-sm-8">
                            @if (Model.Quantity > 20)
                            {
                                <span class="badge bg-success fs-6">@Model.Quantity units (In Stock)</span>
                            }
                            else if (Model.Quantity > 10)
                            {
                                <span class="badge bg-warning text-dark fs-6">@Model.Quantity units (Low Stock)</span>
                            }
                            else if (Model.Quantity > 0)
                            {
                                <span class="badge bg-danger fs-6">@Model.Quantity units (Very Low)</span>
                            }
                            else
                            {
                                <span class="badge bg-dark fs-6">Out of Stock</span>
                            }
                        </dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-warehouse text-info"></i> Day Stock:
                        </dt>
                        <dd class="col-sm-8">
                            <strong>@Model.DayStock</strong>
                        </dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-clock text-success"></i> Prep Time:
                        </dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-primary fs-6">
                                @Model.MinTime - @Model.MaxTime minutes
                            </span>
                        </dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-align-left text-secondary"></i> Description:
                        </dt>
                        <dd class="col-sm-8">
                            <p class="text-muted">@Model.Description</p>
                        </dd>

                        <dt class="col-sm-4">
                            <i class="fas fa-calendar-plus text-info"></i> Created:
                        </dt>
                        <dd class="col-sm-8">
                            @Model.CreatedAt.ToString("dd MMM yyyy, hh:mm tt")
                        </dd>

                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-4">
                                <i class="fas fa-calendar-check text-warning"></i> Last Updated:
                            </dt>
                            <dd class="col-sm-8">
                                @Model.UpdatedAt.Value.ToString("dd MMM yyyy, hh:mm tt")
                            </dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <div class="card">
            <div class="card-header bg-dark text-white">
                <i class="fas fa-chart-bar"></i> Product Statistics
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-3">
                        <div class="stat-box">
                            <h4 class="text-primary">@Model.Price</h4>
                            <p class="text-muted">Price (SAR)</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-box">
                            <h4 class="text-success">@Model.Quantity</h4>
                            <p class="text-muted">Available</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-box">
                            <h4 class="text-info">@Model.DayStock</h4>
                            <p class="text-muted">Day Stock</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-box">
                            <h4 class="text-warning">@Model.MinTime-@Model.MaxTime</h4>
                            <p class="text-muted">Minutes</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .stat-box {
            padding: 20px;
            border-radius: 8px;
            background-color: #f8f9fa;
            margin: 10px 0;
        }

            .stat-box h4 {
                font-weight: bold;
                margin-bottom: 5px;
            }

        .card {
            border: none;
            border-radius: 10px;
        }

        .shadow-lg {
            box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
        }

        .btn-lg {
            padding: 12px 24px;
            font-size: 1.1rem;
            font-weight: 600;
        }
    </style>


<script>
    // Add to cart function - محدثة
    function addToCart(productId) {
        $.ajax({
            url: '@Url.Action("AddToCart", "Cart")',
            type: 'POST',
            data: { productId: productId, quantity: 1 },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(response) {
                if (response.success) {
                    showToast(response.message, 'success');
                    // تحديث عدد السلة فوراً
                    updateCartCount();
                } else {
                    showToast(response.message, 'error');
                    if (response.redirect) {
                        window.location.href = response.redirect;
                    }
                }
            },
            error: function(xhr, status, error) {
                console.log('Error:', error);
                showToast('An error occurred. Please try again.', 'error');
            }
        });
    }

    // Update cart count - دالة محدثة
    function updateCartCount() {
        $.ajax({
            url: '@Url.Action("GetCartCount", "MenuProduct")',
            type: 'GET',
            success: function(data) {
                if (data.success && data.count !== undefined) {
                    const $cartBadge = $('.cart-badge');
                    if (data.count > 0) {
                        if ($cartBadge.length > 0) {
                            $cartBadge.text(data.count).show();
                        } else {
                            $('.nav-cart-icon').append(`<span class="cart-badge">${data.count}</span>`);
                        }
                    } else {
                        $cartBadge.hide();
                    }
                    
                    // إضافة animation
                    $cartBadge.addClass('animate__animated animate__pulse');
                    setTimeout(function() {
                        $cartBadge.removeClass('animate__animated animate__pulse');
                    }, 1000);
                }
            },
            error: function(xhr, status, error) {
                console.log('Error updating cart count:', error);
            }
        });
    }

    // Show toast notification
    function showToast(message, type) {
        const bgColor = type === 'success' ? '#28a745' : '#dc3545';
        const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle';

        const toast = `
            <div class="position-fixed top-0 end-0 p-3" style="z-index: 9999;">
                <div class="toast show" role="alert">
                    <div class="toast-body" style="background-color: ${bgColor}; color: white; border-radius: 8px;">
                        <i class="fas ${icon} me-2"></i>${message}
                    </div>
                </div>
            </div>
        `;

        $('body').append(toast);
        setTimeout(function() {
            $('.toast').fadeOut(function() { $(this).parent().remove(); });
        }, 3000);
    }

    // Handle Enter key press for add to cart
    $(document).ready(function() {
        // تحميل عدد السلة عند تحميل الصفحة
        updateCartCount();
        
        $(document).keypress(function(e) {
            if (e.which === 13) { // Enter key
                if ($('.btn-success:not(:disabled)').is(':focus')) {
                    addToCart(@Model.Id);
                }
            }
        });
    });
</script>
}