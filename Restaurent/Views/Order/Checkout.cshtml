@model Restaurent.ViewModels.CheckoutVm

@{
    ViewData["Title"] = "Checkout";
}

<div class="container mt-4">
    <h2><i class="fas fa-credit-card"></i> Checkout</h2>

    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-info-circle"></i> Order Information</h5>
                </div>
                <div class="card-body">
                    <form asp-action="PlaceOrder" method="post" id="checkoutForm">
                        @Html.AntiForgeryToken()

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Order Type *</label>
                                    <select asp-for="OrderType" class="form-select" id="orderType" required>
                                        <option value="">Select Order Type</option>
                                        <option value="DineIn">Dine In</option>
                                        <option value="Delivery">Delivery</option>
                                    </select>
                                    <span asp-validation-for="OrderType" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Dine In Fields -->
                        <div id="dineInFields" class="row" style="display: none;">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Table Number *</label>
                                    <input asp-for="TableNumber" type="number" class="form-control" placeholder="Enter table number" />
                                    <span asp-validation-for="TableNumber" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Delivery Fields -->
                        <div id="deliveryFields" class="row" style="display: none;">
                            <div class="col-md-12">
                                <div class="form-group mb-3">
                                    <label class="form-label">Delivery Address *</label>
                                    <textarea asp-for="DeliveryAddress" class="form-control" rows="3"
                                              placeholder="Enter your complete delivery address"></textarea>
                                    <span asp-validation-for="DeliveryAddress" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Estimated Time Display -->
                        <div class="row mt-3">
                            <div class="col-12">
                                <div class="alert alert-warning" id="timeAlert" style="display: none;">
                                    <i class="fas fa-clock"></i>
                                    <strong>Estimated Time: </strong>
                                    <span id="estimatedTimeDisplay">Calculating...</span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-success btn-lg" id="placeOrderBtn">
                                <i class="fas fa-check-circle"></i> Place Order
                            </button>
                            <a asp-controller="Cart" asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Cart
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-receipt"></i> Order Summary</h5>
                </div>
                <div class="card-body">
                    @foreach (var item in Model.CartItems)
                    {
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div>
                                <h6 class="mb-0">@item.ProductName</h6>
                                <small class="text-muted">@item.Quantity x @item.Price.ToString("N2") SAR</small>
                            </div>
                            <span class="fw-bold">@item.Total.ToString("N2") SAR</span>
                        </div>
                        <hr class="my-2">
                    }

                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal:</span>
                        <span>@ViewBag.Subtotal.ToString("N2") SAR</span>
                    </div>

                    @if (ViewBag.Discount > 0)
                    {
                        <div class="d-flex justify-content-between mb-2 text-success">
                            <span><i class="fas fa-tag"></i> Discount:</span>
                            <span>-@ViewBag.Discount.ToString("N2") SAR</span>
                        </div>
                    }

                    <hr>

                    <div class="d-flex justify-content-between mt-3">
                        <h5>Total:</h5>
                        <h5 class="text-success">@Model.Total.ToString("N2") SAR</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Toast Container for Service Hours Message -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="serviceHoursToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-danger text-white">
            <i class="fas fa-store-slash me-2"></i>
            <strong class="me-auto">Service Unavailable</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body bg-light">
            <p class="mb-2">نحن حاليا خارج الخدمه بسبب اوقات الراحه</p>
            <p class="mb-0">حاول عاود الطلب مره اخرى بعد الساعه التاسعه صباحا</p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // دالة للتحقق من وقت الخدمة
            function isWithinServiceHours() {
                const now = new Date();
                const currentHour = now.getHours();
                const currentMinutes = now.getMinutes();

                // تحويل الوقت إلى دقائق إجمالية للمقارنة
                const currentTotalMinutes = currentHour * 60 + currentMinutes;
                const startRestMinutes = 0; // 12:00 AM
                const endRestMinutes = 9 * 60; // 9:00 AM

                // إذا كان الوقت بين 12 AM و 9 AM
                return currentTotalMinutes >= startRestMinutes && currentTotalMinutes < endRestMinutes;
            }

            // دالة لإظهار رسالة وقت الراحة
            function showServiceHoursMessage() {
                const toast = new bootstrap.Toast(document.getElementById('serviceHoursToast'));
                toast.show();
            }

            // دالة لتحديث حالة زر الطلب بناءً على وقت الخدمة
            function updateOrderButtonState() {
                const placeOrderBtn = $('#placeOrderBtn');

                if (isWithinServiceHours()) {
                    // خارج أوقات الخدمة
                    placeOrderBtn.prop('disabled', true);
                    placeOrderBtn.html('<i class="fas fa-ban"></i> Service Unavailable');
                    placeOrderBtn.removeClass('btn-success').addClass('btn-secondary');

                    // إظهار رسالة توضيحية صغيرة تحت الزر
                    if (!$('#serviceHoursNote').length) {
                        placeOrderBtn.after(
                            '<div id="serviceHoursNote" class="mt-2 small text-muted">' +
                            '<i class="fas fa-info-circle"></i> Service available from 9:00 AM to 12:00 AM' +
                            '</div>'
                        );
                    }
                } else {
                    // داخل أوقات الخدمة
                    placeOrderBtn.prop('disabled', false);
                    placeOrderBtn.html('<i class="fas fa-check-circle"></i> Place Order');
                    placeOrderBtn.removeClass('btn-secondary').addClass('btn-success');

                    // إزالة الرسالة التوضيحية إذا كانت موجودة
                    $('#serviceHoursNote').remove();
                }
            }

            // التحقق من وقت الخدمة عند تحميل الصفحة
            updateOrderButtonState();

            // التحقق من وقت الخدمة كل دقيقة
            setInterval(updateOrderButtonState, 60000);

            // منع إرسال النموذج إذا كان خارج أوقات الخدمة
            $('#checkoutForm').on('submit', function(e) {
                if (isWithinServiceHours()) {
                    e.preventDefault();
                    showServiceHoursMessage();
                    return false;
                }
            });

            // دالة لحساب الوقت التقديري
            function updateEstimatedTime(orderType) {
                if (orderType) {
                    $.get('@Url.Action("GetEstimatedTime", "Order")', { orderType: orderType }, function(data) {
                        if (data.success) {
                            $('#timeAlert').show();
                            $('#estimatedTimeDisplay').text(data.estimatedTime);
                        }
                    });
                } else {
                    $('#timeAlert').hide();
                }
            }

            // تحديث الحقول عند تغيير نوع الطلب
            $('#orderType').change(function() {
                var orderType = $(this).val();

                // إخفاء جميع الحقول أولاً
                $('#dineInFields').hide();
                $('#deliveryFields').hide();

                // إظهار الحقول المناسبة
                if (orderType === 'DineIn') {
                    $('#dineInFields').show();
                    updateEstimatedTime('DineIn');
                } else if (orderType === 'Delivery') {
                    $('#deliveryFields').show();
                    updateEstimatedTime('Delivery');
                } else {
                    $('#timeAlert').hide();
                }
            });

            // إظهار الوقت التقديري تلقائياً إذا كان هناك نوع طلب محدد
            var initialOrderType = $('#orderType').val();
            if (initialOrderType) {
                updateEstimatedTime(initialOrderType);
                if (initialOrderType === 'DineIn') {
                    $('#dineInFields').show();
                } else if (initialOrderType === 'Delivery') {
                    $('#deliveryFields').show();
                }
            }
        });
    </script>
}